use Blinkitdatabase;
select * from blinkit_data;

-- CLEANING OF DATA 


UPDATE blinkit_data
SET Item_Fat_Content = 
CASE WHEN  Item_Fat_Content IN ('LF', 'low fat') THEN 'Low Fat'
WHEN Item_Fat_Content = 'reg' THEN  'Regular'
ELSE Item_Fat_Content 
END;

-- CHECKING OF QUERY
SELECT  DISTINCT (item_fat_content) from blinkit_data;

--TOTAL SALES IN MILLIONS (KPI)

SELECT CAST (CAST(SUM(Sales)/1000000.0 AS DECIMAL (10,2))  AS VARCHAR(20))  + ' MILLION' AS Total_Sales_Million
from blinkit_data ;

-- AVERAGE SALES (KPI)

SELECT CAST (AVG (SALES) AS DECIMAL (10,0)) AS  AVG_SALES FROM blinkit_data;

-- NUMBER OF ITEM ORDER (KPI)

SELECT COUNT(*) AS NO_OF_ITEMS FROM blinkit_data;

-- AVERAGE RATING (KPI)

SELECT CAST (AVG (Rating) AS DECIMAL (10,2)) AS  AVG_RATING FROM blinkit_data;

-- GRANULAR REQUIREMENTS 

--TOTAL SALES, AVG SALES , NO OF ITEMS, AVG RATING BY FAT CONTENT

SELECT ITEM_FAT_CONTENT,
	CAST(SUM(SALES) AS DECIMAL(10,2)) AS TOTAL_SALES,
	CAST (AVG (SALES) AS DECIMAL (10,1 )) AS  AVG_SALES,
	COUNT(*) AS NO_OF_ITEMS,
	CAST (AVG (Rating) AS DECIMAL (10,2)) AS  AVG_RATING
FROM blinkit_data
GROUP BY ITEM_FAT_CONTENT
ORDER BY TOTAL_SALES DESC;

-- TOTAL SALES BY ITEM TYPE

SELECT Item_Type,
	CAST(SUM(Sales) AS DECIMAL(10,2)) AS TOTAL_SALES
FROM blinkit_data
GROUP BY Item_Type
ORDER BY TOTAL_SALES DESC;

-- FAT CONTENT BY OUTLET FOR TOTAL SALES

SELECT OUTLET_LOCATION_TYPE, ITEM_FAT_CONTENT ,
	CAST(SUM(Sales) AS DECIMAL(10,2)) AS TOTAL_SALES
FROM blinkit_data
GROUP BY OUTLET_LOCATION_TYPE, ITEM_FAT_CONTENT 
ORDER BY TOTAL_SALES ;

-- TOTAL SALES BY OUTLET ESTABLISHMENT

SELECT OUTLET_ESTABLISHMENT_YEAR,
	CAST(SUM(Sales) AS DECIMAL(10,2)) AS TOTAL_SALES
FROM blinkit_data
GROUP BY OUTLET_ESTABLISHMENT_YEAR
ORDER BY TOTAL_SALES;

--CHART REQUIRMENT 

-- PERCENTAGE OF SALES BY OUTLET SIZE

SELECT OUTLET_SIZE, CAST(SUM(SALES) AS DECIMAL (10,2)) AS TOTAL_SALES,
CAST((SUM(SALES) * 100.0/ SUM(SUM(SALES)) OVER()) AS DECIMAL(10,2)) AS SALES_PERCENTAGE
FROM blinkit_data
GROUP BY Outlet_Size
ORDER BY TOTAL_SALES DESC;

--SALES BY OUTLET LOCATION

SELECT OUTLET_LOCATION_TYPE,
CAST(SUM(SALES) AS DECIMAL(10,2)) AS TOTAL_SALES
FROM blinkit_data
GROUP BY Outlet_Location_Type
ORDER BY TOTAL_SALES DESC;

--ALL METRICS BY OUTLET TYPE

SELECT OUTLET_TYPE,
	CAST(SUM(SALES) AS DECIMAL(10,2)) AS TOTAL_SALES,
	CAST(AVG(SALES) AS DECIMAL(10,1)) AS AVG_SALES,
	COUNT(*) AS NO_OF_ITEMS,
	CAST(AVG(RATING) AS DECIMAL (10,2)) AS AVG_RATING,
	CAST((SUM(SALES) * 100.0/ SUM(SUM(SALES)) OVER()) AS DECIMAL(10,2)) AS SALES_PERCENTAGE
FROM blinkit_data
GROUP BY Outlet_Type
ORDER BY TOTAL_SALES DESC ;

